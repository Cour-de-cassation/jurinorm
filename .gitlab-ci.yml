image: docker:20.10.22
services:
  - docker:20.10.22-dind

variables:
  tj_batch_docker_image: '$CI_REGISTRY/cour-de-cassation/jurinorm/tj:$CI_COMMIT_SHORT_SHA'
  tcom_batch_docker_image: '$CI_REGISTRY/cour-de-cassation/jurinorm/tcom:$CI_COMMIT_SHORT_SHA'
  cph_batch_docker_image: '$CI_REGISTRY/cour-de-cassation/jurinorm/cph:$CI_COMMIT_SHORT_SHA'

stages:
  - build
  - deploy

.build_and_push_template:
  stage: build
  variables:
    HTTP_PROXY: $HTTP_PROXY_DEV
    HTTPS_PROXY: $HTTPS_PROXY_DEV
  script:
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

    # To avoid rebuild existing image when adding tag to a commit
    - |
      if docker pull "$DOCKER_IMAGE_NAME"; then
        echo "Docker image $DOCKER_IMAGE_NAME already exist, skipping build and push."
        exit 0
      fi
    - docker build
      --build-arg http_proxy=$HTTP_PROXY
      --build-arg https_proxy=$HTTPS_PROXY
      --target $TARGET
      -t $DOCKER_IMAGE_NAME .
    - docker push $DOCKER_IMAGE_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_TAG'
  tags:
    - docker

build_and_push_tj_batch:
  variables:
    DOCKER_IMAGE_NAME: $tj_batch_docker_image
    TARGET: tj-batch
  extends: .build_and_push_template

build_and_push_tcom_batch:
  variables:
    DOCKER_IMAGE_NAME: $tcom_batch_docker_image
    TARGET: tcom-batch
  extends: .build_and_push_template

build_and_push_cph_batch:
  variables:
    DOCKER_IMAGE_NAME: $cph_batch_docker_image
    TARGET: cph-batch
  extends: .build_and_push_template

.deploy_template:
  stage: deploy
  environment: $ENV
  image: alpine/ansible:2.16.1
  script:
    - mkdir /root/.ssh
    - cat "$SSH_KEY" > /root/.ssh/id_rsa
    - cat "$KNOWN_HOSTS" > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/known_hosts
    - ansible-playbook -e tj_batch_image=$tj_batch_docker_image -e tcom_batch_image=$tcom_batch_docker_image -e cph_batch_image=$cph_batch_docker_image -i ansible/inventory/$ENV.yml ansible/deploy_jurinorm.yml --vault-password-file=$ANSIBLE_VAULT_PASS
  needs:
    - build_and_push_tj_batch
    - build_and_push_tcom_batch
    - build_and_push_cph_batch
  tags:
    - docker

deploy_dev:
  variables:
    ENV: dev
  extends: .deploy_template
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG'
      when: on_success
  needs:
    - build_and_push_tj_batch
    - build_and_push_tcom_batch
    - build_and_push_cph_batch

deploy_preprod:
  variables:
    ENV: preprod
  extends: .deploy_template
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual
  needs:
    - deploy_dev

deploy_prod:
  variables:
    ENV: prod
  extends: .deploy_template
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual
  needs:
    - deploy_preprod
